name: Build
on:
  workflow_dispatch:
permissions:
  id-token: write  # OIDC support
  contents: write
  actions: read
  packages: write
  security-events: write
  models: none
env:
  KUBERNETES_VERSION: "v1.34.1+k3s1"
  BASE_IMAGE: "alpine:3.22"
    
jobs:
  setup-version:
    runs-on: ubuntu-24.04
    outputs:
      version: ${{ steps.tag.outputs.tag }}
      kubernetes_version: ${{ steps.set-env.outputs.kubernetes_version }}
      base_image: ${{ steps.set-env.outputs.base_image }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - uses: anothrNick/github-tag-action@4ed44965e0db8dab2b466a16da04aec3cc312fd8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_PREFIX: v
        id: tag
      - name: Set environment outputs
        id: set-env
        run: |
          echo "kubernetes_version=${{ env.KUBERNETES_VERSION }}" >> "$GITHUB_OUTPUT"
          echo "base_image=${{ env.BASE_IMAGE }}" >> "$GITHUB_OUTPUT"
  build-amd64:
    needs: setup-version
    uses: ./.github/workflows/factory.yaml
    secrets:
      registry_username: codecrafter404
      registry_password: ${{ secrets.GITHUB_TOKEN }}
    with:
      version: "auto"
      base_image: ${{ needs.setup-version.outputs.base_image }}
      model: "generic"
      iso: true
      summary_artifacts: true
      arch: amd64
      kubernetes_version: ${{ needs.setup-version.outputs.kubernetes_version }}
      kubernetes_distro: k3s
      dockerfile_path: Dockerfile
      custom_artifact_format: "kairos-amd64"
      # registry
      registry_domain: ghcr.io
      registry_namespace: codecrafter404
      registry_repository: alpine-reunlock-$ARCH-$MODEL
      custom_tag_format: $VERSION
      image_labels: "org.opencontainers.image.source=https://github.com/codecrafter404/kairos-re-unlock"
      
  build-rpi:
    needs: setup-version
    uses: ./.github/workflows/factory.yaml
    secrets:
      registry_username: codecrafter404
      registry_password: ${{ secrets.GITHUB_TOKEN }}
    with:
      version: "auto"
      base_image: ${{ needs.setup-version.outputs.base_image }}
      model: "rpi4"
      raw: true
      summary_artifacts: true
      arch: arm64
      kubernetes_version: ${{ needs.setup-version.outputs.kubernetes_version }}
      kubernetes_distro: k3s
      dockerfile_path: Dockerfile
      custom_artifact_format: "kairos-rpi"
      # registry
      registry_domain: ghcr.io
      registry_namespace: codecrafter404
      registry_repository: alpine-reunlock-$ARCH-$MODEL
      custom_tag_format: $VERSION
      image_labels: "org.opencontainers.image.source=https://github.com/codecrafter404/kairos-re-unlock"
  release:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    needs: ["build-amd64", "build-rpi"]
    steps:
      - run: mkdir /tmp/artifacts
      - uses: actions/download-artifact@v5
        with:
          pattern: "*.zip"
          path: /tmp/artifacts
      - run: |
          for zipfile in /tmp/artifacts/*.zip; do
              if [ -f "$zipfile" ]; then
                  unzip -o "$zipfile" -d /tmp/artifacts/
              fi
          done

      - run: |
          arts=$(python3 -c 'import os
          res = []
          for root, dirs, files in os.walk("/tmp/"):
              for name in files:
                  if name.endswith(".raw") or name.endswith(".iso"):
                      res.append(os.path.join(root, name))
          print(str.join(",", res))')
          echo "artifacts=${arts}" >> ""$GITHUB_OUTPUT""
        id: artifacts
      - uses: ncipollo/release-action@v1.20.0
        with:
          artifacts: ${{ steps.artifacts.outputs.artifacts }}
          tag: ${{ needs.setup-version.outputs.version }}
          skipIfReleaseExists: true
